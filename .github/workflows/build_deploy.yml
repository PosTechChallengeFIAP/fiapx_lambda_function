name: Build Lambda Package

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [trigger-lambda-deploy]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install requests -t lambda_build/
        cp lambda_handler.py lambda_build/

    - name: Zip Lambda package
      run: |
        cd lambda_build
        zip -r ../lambda.zip .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: lambda-zip
        path: lambda.zip


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: lambda-zip
        path: lambda.zip

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: |
        export TF_LOG=DEBUG
        terraform init

    - name: Debug
      run: |
        ls
        
    - name: Terraform Apply
      working-directory: ./terraform
      run: |
        terraform apply -auto-approve \
        -var "aws_region=us-east-1" \
        -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
        -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
        -var "aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" 
